{"version":3,"file":"main.8b6ecb25044f5ddeca33.hot-update.js","sources":["webpack:///./src/components/podium-standing-list/PodiumStandingList.js","webpack:///./src/components/race-standing/RaceStanding.js","webpack:///./src/components/tab-comp/PanelComp.js","webpack:///./src/components/tab-comp/TabComp.js"],"sourcesContent":["import React from 'react';\n\nclass PodiumStandingList extends React.PureComponent {\n    render() {\n        const {\n            index,\n            firstName,\n            boldName,\n            simpleName,\n            teamColor,\n            points,\n        } = this.props;\n        return (\n          <a href=\"#raceStanding-list\" className=\"f2-podium--link f2-bg--white\">\n            <span className=\"f2-podium--rank f2-bold--xs\">{index + 1}</span>\n            <span className=\"team-color-icon\" style={{ background: `#${teamColor}` }} />\n            <span className=\"f2-podium--driver f2--xs\">\n              <span className=\"f2-capitalize\">{firstName}</span>\n                            &nbsp;\n              <strong className=\"f2-podium--surname\">{boldName}</strong>\n            </span>\n            <span className=\"f2-podium-subdetail misc--label\">{simpleName}</span>\n            <span className=\"f2-podium-right\">\n              <span className=\"f2-podium--time f2-label misc--label\">\n                {points}\n                {' '}\nPTS\n              </span>\n              <i className=\"icon icon-chevron-right f2-color--warmRed\" />\n            </span>\n          </a>\n        );\n    }\n}\n\nPodiumStandingList.displayName = 'PodiumStandingList';\n\nexport default PodiumStandingList;\n","import React from 'react';\n\nimport TabComp from '../tab-comp/TabComp';\nimport PanelComp from '../tab-comp/PanelComp';\nimport PodiumStandingList from '../podium-standing-list/PodiumStandingList';\n\nclass RaceStanding extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: true,\n            isContructorLoading: true,\n            showRacerCompList: 'f2-podium--item-none',\n            raceResults: [],\n            contructorResults: [],\n            error: null\n        };  \n    }\n    \n    componentDidMount() {\n      this.fetchDrivers();\n      this.fetchContructors();\n    }\n\n    showFullStanding = () => {\n        this.setState({\n            showRacerCompList: ''\n        });\n    }\n\n    fetchDrivers() {\n        fetch('http://localhost:3002/drivers')\n        .then(response => response.json())\n        .then(data =>\n            this.setState({\n                raceResults: data,\n                isLoading: false,\n            }))\n        .catch(error => this.setState({ error, isLoading: false }));\n    }\n    \n    fetchContructors() {\n        fetch('http://localhost:3002/contructors')\n        .then(response => response.json())\n        .then(data =>\n            this.setState({\n                contructorResults: data,\n                isContructorLoading: false,\n            }))\n        .catch(error => this.setState({ error, isContructorLoading: false }));\n    }\n\n    render() {\n        const {\n            isLoading, isContructorLoading, raceResults, contructorResults, showRacerCompList, error\n        } = this.state;\n\n        const renderRacerList = raceResults.sort((a, b) => b.points - a.points).map((racer, index) => {\n            const { id } = racer;    \n            return (          \n              <li key={id} className={`f2-podium--item ${index > 9 ? showRacerCompList : ''} `}>\n                <PodiumStandingList\n                  index={index}\n                 \n                  boldName={racer.lastName}\n                  simpleName={racer.team}\n                  teamColor={racer.teamColor}\n                  points={racer.points}\n                />\n              </li>\n            );\n        });\n        \n        const rednerViewFullStanding = (\n          <button \n            type=\"button\" \n            className=\"btn btn--default\" \n            onClick={() => this.showFullStanding()} \n            onKeyPress={() => {}}\n          >\n    View Full Standing\n          </button>\n    );\n\n    // Constructors List started\n\n    const renderContructorList = contructorResults.sort((a, b) => b.points - a.points).map((contructor, index) => {\n        const {\n            id,\n            drivers, \n            team,\n            teamColor, \n            points \n        } = contructor;    \n        \n        return (          \n          <li key={id} className=\"f2-podium--item\">\n            <a href=\"#raceStanding-list\" className=\"f2-podium--link f2-bg--white\">\n              <span className=\"f2-podium--rank f2-bold--xs\">{index + 1}</span>\n              <span className=\"team-color-icon\" style={{ background: `#${teamColor}` }} />\n              <span className=\"f2-podium--driver f2--xs\">\n                <strong className=\"f2-podium--surname\">{team}</strong>\n              </span>\n              <span className=\"f2-podium-subdetail misc--label\">{drivers}</span>\n              <span className=\"f2-podium-right\">\n                <span className=\"f2-podium--time f2-label misc--label\">\n                  {points}\n                  {' '}\nPTS\n                </span>\n                <i className=\"icon icon-chevron-right f2-color--warmRed\" />\n              </span>\n            </a>\n          </li>\n        );\n    });\n\n        return (\n          <TabComp>\n            <PanelComp uniqueKey=\"panel_1\" title=\"Drivers\">\n              <div className=\"container\">\n                <div className=\"col-custom-10\">\n                  <h2 className=\"f2-raceStanding--tabTitle\">Standing</h2>\n                  <div className=\"f2-podium--top-positions\">\n                    <a href=\"#podium-2\" className=\"f2-podium--position pos--2\">\n                      <div className=\"f2-driver-snapbox\">\n                        <div className=\"team-color-border\" style={{ background: '#00D2BE' }} />\n                        <picture className=\"f2-driver-snap\">\n                          <img \n                            alt=\"v bottas\"\n                            src=\"http://localhost:3000/assets/img/v_bottas.png\"\n                          />\n                        </picture>\n                      </div>\n                      <div className=\"f2-driver-info\">\n                        <span className=\"f2-podium--driver f2--xs\">\n                          <span className=\"f2-podium--name\">Valtteri</span>\n                          <span className=\"f2-podium--flag\">\n                            <picture className=\"team-flag\">\n                              <img \n                                src=\"http://localhost:3000/assets/img/country-flag-Greece.png\"\n                                alt=\"countryFlag\"\n                              />\n                            </picture>\n                          </span>\n                          <strong className=\"f2-podium--surname f2-uppercase\">Bottas</strong>\n                        </span>\n                      </div>\n                    </a>\n\n                    <a href=\"#podium-2\" className=\"f2-podium--position pos--1\">\n                      <div className=\"f2-driver-snapbox\">\n                        <div className=\"team-color-border\" style={{ background: '#00D2BE' }} />\n                        <picture className=\"f2-driver-snap\">\n                          <img \n                            alt=\"v bottas\"\n                            src=\"http://localhost:3000/assets/img/l_hamilton.png\"\n                          />\n                        </picture>\n                      </div>\n                      <div className=\"f2-driver-info\">\n                        <span className=\"f2-podium--driver f2--xs\">\n                          <span className=\"f2-podium--name\">Lewis</span>\n                          <span className=\"f2-podium--flag\">\n                            <picture className=\"team-flag\">\n                              <img \n                                src=\"http://localhost:3000/assets/img/country-flag-Greece.png\"\n                                alt=\"countryFlag\"\n                              />\n                            </picture>\n                          </span>\n                          <strong className=\"f2-podium--surname f2-uppercase\">hamilton</strong>\n                        </span>\n                      </div>\n                    </a>\n\n                    <a href=\"#podium-2\" className=\"f2-podium--position pos--3\">\n                      <div className=\"f2-driver-snapbox\">\n                        <div className=\"team-color-border\" style={{ background: '#1E41FF' }} />\n                        <picture className=\"f2-driver-snap\">\n                          <img \n                            alt=\"v bottas\"\n                            src=\"http://localhost:3000/assets/img/m_verstappen.png\"\n                          />\n                        </picture>\n                      </div>\n                      <div className=\"f2-driver-info\">\n                        <span className=\"f2-podium--driver f2--xs\">\n                          <span className=\"f2-podium--name\">Max</span>\n                          <span className=\"f2-podium--flag\">\n                            <picture className=\"team-flag\">\n                              <img \n                                src=\"http://localhost:3000/assets/img/country-flag-Greece.png\"\n                                alt=\"countryFlag\"\n                              />\n                            </picture>\n                          </span>\n                          <strong className=\"f2-podium--surname f2-textUppercase\">verstappen</strong>\n                        </span>\n                      </div>\n                    </a>\n                  </div>\n                  {error ? <p>{error.message}</p> : null}\n                  <ul className=\"f2-podium--raceStanding-list\">\n                    {!isLoading ? (\n                        renderRacerList\n                        ) : (\n                          <h3>Loading...</h3>\n                    )}\n                    {!isLoading && showRacerCompList.length > 1 ? (rednerViewFullStanding) : ''}\n                  </ul>\n                </div>\n              </div>\n                \n            </PanelComp>\n            <PanelComp uniqueKey=\"panel_2\" title=\"Contructors\">\n              <div className=\"container\">\n                <div className=\"col-custom-10\">\n                  <h2 className=\"f2-raceStanding--tabTitle\">Standing</h2>\n                  <div className=\"f2-podium--top-positions constructors\">\n                    <a href=\"#podium-2\" className=\"f2-podium--position pos--2\">\n                      <div className=\"f2-contructors-snapbox\">\n                        {/* <div className=\"team-color-border\" style={{ background: '#00D2BE' }} /> */}\n                        <picture className=\"constructor-logo\">\n                          <img \n                            alt=\"v bottas\"\n                            src=\"http://localhost:3000/assets/img/ferrari_logo.png\"\n                          />\n                        </picture>\n                      </div>\n                      <div className=\"f2-constructorsCar-info\">\n                        <picture className=\"car-image\">\n                          <img \n                            src=\"http://localhost:3000/assets/img/ferrari.png\"\n                            alt=\"ferrari\"\n                          />\n                        </picture>\n                        {/* <div className=\"team-color-border\" style={{ background: '#00D2BE' }} /> */}\n                      </div>\n                    </a>\n\n                    <a href=\"#podium-2\" className=\"f2-podium--position pos--1\">\n                      <div className=\"f2-contructors-snapbox\">\n                        <picture className=\"constructor-logo\">\n                          <img \n                            alt=\"v bottas\"\n                            src=\"http://localhost:3000/assets/img/mercedes_logo.png\"\n                          />\n                        </picture>\n                        {/* <div className=\"team-color-border\" style={{ background: '#00D2BE' }} /> */}\n                      </div>\n                      <div className=\"f2-constructorsCar-info\">\n                        <picture className=\"car-image\">\n                          <img \n                            src=\"http://localhost:3000/assets/img/mercedes.png\"\n                            alt=\"ferrari\"\n                          />\n                        </picture>\n                      </div>\n                    </a>\n\n                    <a href=\"#podium-2\" className=\"f2-podium--position pos--3\">\n                      <div className=\"f2-contructors-snapbox\">\n                        {/* <div className=\"team-color-border\" style={{ background: '#00D2BE' }} /> */}\n                        <picture className=\"constructor-logo\">\n                          <img \n                            alt=\"v bottas\"\n                            src=\"http://localhost:3000/assets/img/redBull_logo.png\"\n                          />\n                        </picture>\n                      </div>\n                      <div className=\"f2-constructorsCar-info\">\n                        <picture className=\"car-image\">\n                          <img \n                            src=\"http://localhost:3000/assets/img/redBull.png\"\n                            alt=\"ferrari\"\n                          />\n                        </picture>\n                      </div>\n                    </a>\n                  </div>\n                \n                  {error ? <p>{error.message}</p> : null}\n                  <ul className=\"f2-podium--raceStanding-list\">\n                    {!isContructorLoading ? (\n                        renderContructorList\n                        ) : (\n                          <h3>Loading...</h3>\n                    )}\n                  </ul>\n                </div>\n              </div>\n            </PanelComp>\n            <PanelComp uniqueKey=\"panel_3\" title=\"Last Race\">This is the lastrace panel</PanelComp>\n          </TabComp>\n        );\n    }\n}\n\nexport default RaceStanding;\n","import React from 'react';\n\nconst PanelComp = class extends React.PureComponent {\n    render() {\n        const { children } = this.props;\n        return <div>{children}</div>;\n    }\n};\n\nPanelComp.displayName = 'PanelComp';\nexport default PanelComp;\n","import React from 'react';\n\nclass TabComp extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      findSelected: 0,\n    };\n  }\n\n  onHandleChange = (index) => {\n    this.setState({ findSelected: index });\n  }\n\n  handleKeyPress = () => {\n\n  }\n\n  render() {\n    const { children } = this.props;\n    const { findSelected } = this.state;\n    return (\n      <div className=\"f2-raceStanding-wrapper\">\n        <div className=\"f2-raceStanding-content\">\n          <ul className=\"inline f2-raceStanding-inlineTabs f2-bg--offWhite\">\n            {children.map((elem, index) => {\n                const style = index === findSelected ? 'selected f2-tab f2--xs' : 'f2-tab f2--xs';\n                return (\n                  <li className={style} key={elem.props.uniqueKey}>                \n                    <div\n                      className=\"tabBtn\"\n                      role=\"button\"\n                      onClick={() => this.onHandleChange(index)}\n                      onKeyPress={() => {}}\n                      tabIndex={0}\n                    >\n                      {elem.props.title}\n                    </div>\n                  </li>\n                );\n            })}\n          </ul>\n          <div className=\"tab\">\n            {children[findSelected]}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TabComp;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA9BA;AACA;AAgCA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AAEA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAkBA;AACA;AADA;AAGA;AACA;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAUA;AACA;;;AACA;AACA;AACA;AACA;;;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAFA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAFA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAUA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA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","sourceRoot":""}