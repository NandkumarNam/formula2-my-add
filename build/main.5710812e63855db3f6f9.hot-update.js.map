{"version":3,"file":"main.5710812e63855db3f6f9.hot-update.js","sources":["webpack:///./src/components/race-standing/RaceStanding.js"],"sourcesContent":["import React from 'react';\n\nimport TabComp from '../tab-comp/TabComp';\nimport PanelComp from '../tab-comp/PanelComp';\nimport PodiumStandingList from '../podium-standing-list/PodiumStandingList';\nimport TopRacers from '../top-racers/TopRacers';\n\n\nclass RaceStanding extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: true,\n            isContructorLoading: true,\n            showRacerCompList: 'f2-podium--item-none',\n            raceResults: [],\n            contructorResults: [],\n            error: null\n        };  \n    }\n    \n    componentDidMount() {\n      this.fetchDrivers();\n      this.fetchContructors();\n    }\n\n    showFullStanding = () => {\n        this.setState({\n            showRacerCompList: ''\n        });\n    }\n\n    fetchDrivers() {\n      fetch('http://localhost:3002/drivers')\n      .then(response => response.json())\n      .then(data =>\n          this.setState({\n              raceResults: data.sort((a, b) => (b.points - a.points)),\n              isLoading: false,\n          }))\n      .catch(error => this.setState({ error, isLoading: false }));\n    }\n    \n    fetchContructors() {\n        fetch('http://localhost:3002/contructors')\n        .then(response => response.json())\n        .then(data =>\n            this.setState({\n                contructorResults: data.sort((a, b) => (b.points - a.points)),\n                isContructorLoading: false,\n            }))\n        .catch(error => this.setState({ error, isContructorLoading: false }));\n    }\n\n    render() {\n        const {\n            isLoading, isContructorLoading, raceResults, contructorResults, showRacerCompList, error\n        } = this.state;\n\n        // Racers List start\n        const renderRacerList = raceResults.map((racer, index) => {\n            const {\n                id,\n                firstName, \n                lastName, \n                team, \n                teamColor, \n                points \n            } = racer;    \n            return (          \n              <li key={id} className={`f2-podium--item ${index > 9 ? showRacerCompList : ''} `}>\n                <PodiumStandingList\n                  index={index}\n                  firstName={firstName}\n                  boldName={lastName}\n                  simpleName={team}\n                  teamColor={teamColor}\n                  points={points}\n                />\n              </li>\n            );\n        });\n        \n        const rednerViewFullStanding = (\n          <button \n            type=\"button\" \n            className=\"btn btn--default\" \n            onClick={() => this.showFullStanding()} \n            onKeyPress={() => {}}\n          >\n            {' '}\nView Full Standing\n          </button>\n        );\n\n        // Constructors List start\n        const renderContructorList = contructorResults.map((contructor, index) => {\n          const {\n              id,\n              drivers, \n              team,\n              teamColor, \n              points \n          } = contructor;    \n          \n          return (          \n            <li key={id} className=\"f2-podium--item\">\n              <PodiumStandingList\n                index={index}\n                boldName={team}\n                simpleName={drivers}\n                teamColor={teamColor}\n                points={points}\n              />\n            </li>\n          );\n        });\n\n        return (\n          <TabComp>\n            <PanelComp uniqueKey=\"panel_1\" title=\"Drivers\">\n              <div className=\"container\">\n                <div className=\"col-custom-10\">\n                  <h2 className=\"f2-raceStanding--tabTitle\">Standing</h2>\n                  {!isLoading ? (\n                    <TopRacers racers={raceResults} />\n                      ) : (\n                        <h3>Loading...</h3>\n                  )}\n                  \n                  {error ? <p>{error.message}</p> : null}\n                  <ul className=\"f2-podium--raceStanding-list\">\n                    {!isLoading ? (\n                      renderRacerList\n                      ) : (\n                        <h3>Loading...</h3>\n                    )}\n                    {!isLoading && showRacerCompList.length > 1 ? (rednerViewFullStanding) : ''}\n                  </ul>\n                </div>\n              </div>\n                \n            </PanelComp>\n            <PanelComp uniqueKey=\"panel_2\" title=\"Contructors\">\n              <div className=\"container\">\n                <div className=\"col-custom-10\">\n                  <h2 className=\"f2-raceStanding--tabTitle\">Standing</h2>\n                  {!isContructorLoading ? (\n                      renderContructorList\n                      ) : (\n                        <h3>Loading...</h3>\n                  )}\n                  {error ? <p>{error.message}</p> : null}\n                  <ul className=\"f2-podium--raceStanding-list\">\n                    {!isContructorLoading ? (\n                      renderContructorList\n                      ) : (\n                        <h3>Loading...</h3>\n                    )}\n                  </ul>\n                </div>\n              </div>\n            </PanelComp>\n            <PanelComp uniqueKey=\"panel_3\" title=\"Last Race\">This is the lastrace panel</PanelComp>\n          </TabComp>\n        );\n    }\n}\n\nexport default RaceStanding;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAkBA;AACA;AADA;AAGA;AACA;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAUA;AACA;;;AACA;AACA;AACA;AACA;;;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAFA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAFA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAUA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA9JA;AACA;AAgKA;;;;A","sourceRoot":""}