{"version":3,"file":"main.751192bbc059aabe2bbd.hot-update.js","sources":["webpack:///./src/pages/race-standing/RaceStanding.js"],"sourcesContent":["import React from 'react';\nimport withSSR from '../../components/ssr_core/withSSR';\n\nclass RaceStanding extends React.Component {\n  // This works similarly to Next.js's `getInitialProps`\n  static getInitialData({ match }) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve({\n          text: \"This text is server rendered if and only if it's the initial render.Go to another route.\",\n          //currentRoute: match.pathname,\n        });\n      }, 500);\n    });\n  }\n\n  render() {\n    const { isLoading, text, error } = this.props;\n    const CODE = process.env.RAZZLE_API_SECRET_CODE;\n    return (\n      <div>\n        <h1>\n        RaceStanding is\n          {CODE}\n        </h1>\n        {isLoading && <div>Loading... </div>}\n        {error && <div style={{ color: 'red' }}>{JSON.stringify(error, null, 2)}</div>}\n        {text && <div>{text}</div>}\n      </div>\n    );\n  }\n}\n\nexport default withSSR(RaceStanding);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;AAaA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;;;AA1BA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;AAXA;AACA;AA6BA;;;;A","sourceRoot":""}