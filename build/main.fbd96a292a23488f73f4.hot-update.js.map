{"version":3,"file":"main.fbd96a292a23488f73f4.hot-update.js","sources":["webpack:///./src/App.js","webpack:///./src/pages/race-standing/RaceStanding.js"],"sourcesContent":["import './scss/App.scss';\n\nimport React from 'react';\nimport RaceStanding from './pages/race-standing/RaceStanding';\n\n// import { NavLink, Route, Switch } from 'react-router-dom';\n// import { uid } from 'react-uid';\n\n/*\nconst App = ({ routes, initialData }) =>\n  (routes ? (\n    <div className=\"App\">\n      <nav>\n        {routes.map((route, index) => (\n          <NavLink style={{ marginRight: '1rem', color: '#0af' }} activeStyle={{ fontWeight: 800, color: '#000' }} key={`nav-${uid(route)}`} exact={index === 0} to={route.path}>\n            {route.name}\n          </NavLink>\n        ))}\n      </nav>\n      <Switch>\n        {routes.map((route, index) => (\n          // pass in the initialData from the server or window.DATA for this\n          // specific route\n          <Route\n            key={uid(route)}\n            path={route.path}\n            exact={route.exact}\n            render={props =>\n              React.createElement(route.component, {\n                ...props,\n                initialData: initialData[index] || null,\n              })}\n          />\n        ))}\n      </Switch>\n    </div>\n  ) : null);\n  */\n\nconst App = () => (\n  <RaceStanding/>\n);\n\nexport default App;\n","import React from 'react';\nimport withSSR from '../../components/ssr_core/withSSR';\n\nclass RaceStanding extends React.Component {\n  // This works similarly to Next.js's `getInitialProps`\n  static getInitialData({ match }) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve({\n          text: \"This text is server rendered if and only if it's the initial render.Go to another route.\",\n          currentRoute: match.pathname,\n        });\n      }, 500);\n    });\n  }\n\n  render() {\n    const { isLoading, text, error } = this.props;\n    const CODE = process.env.RAZZLE_API_SECRET_CODE;\n    return (\n      <div>\n        <h1>\n        RaceStanding is\n          {CODE}\n        </h1>\n        {isLoading && <div>Loading... </div>}\n        {error && <div style={{ color: 'red' }}>{JSON.stringify(error, null, 2)}</div>}\n        {text && <div>{text}</div>}\n      </div>\n    );\n  }\n}\n\nexport default withSSR(RaceStanding);\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;;;;;;;;;;;;;AAaA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;;;AA1BA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;AAXA;AACA;AA6BA;;;;A","sourceRoot":""}